name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm install
      - run: npm run lint
      - run: npm run typecheck
      - run: npm run test
      - run: npm run build --if-present
      - name: Upload typecheck cache
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tsbuildinfo
          path: '**/*.tsbuildinfo'
          if-no-files-found: ignore
      - name: Upload lint results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: .eslintcache
          if-no-files-found: ignore

  vercel-preview:
    if: github.event_name == 'pull_request'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm install
      - run: npm run build --workspace @videobooker/web
      - run: npx vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }}
      - run: npx vercel deploy --prebuilt --yes --token ${{ secrets.VERCEL_TOKEN }} --scope videobooker

  api-preview:
    if: github.event_name == 'pull_request'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build API image (preview)
        run: |
          docker build --target api --tag preview-api:${{ github.run_id }} .
      - name: Deploy to Render (placeholder)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: ./ci/scripts/deploy-render.sh preview-${{ github.event.number }}
